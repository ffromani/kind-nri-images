#   Copyright The containerd Authors.

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

ARG KIND_IMAGE=kindest/node
ARG KIND_VERSION=1.21
ARG KIND_MINOR=1

# Legacy builder that doesn't support TARGETARCH should set this explicitly using --build-arg.
# If TARGETARCH isn't supported by the builder, the default value is "amd64".

# Build CRI-O
FROM golang:1.17-bullseye AS cri-o-dev
RUN apt-get update -y && apt-get install -y libseccomp-dev libgpgme-dev
RUN git clone https://github.com/klihub/nri $GOPATH/src/github.com/nri/nri && \
    cd $GOPATH/src/github.com/nri/nri && \
    git checkout proto/draft && \
    make build && \
    make install-ttrpc-plugin && \
    mkdir /nri && \
    cp bin/logger /nri/ && \
    cp bin/logger /nri/log-all && \
    cp bin/logger /nri/log-container
RUN git clone https://github.com/klihub/cri-o $GOPATH/src/github.com/cri-o/cri-o && \
    cd $GOPATH/src/github.com/cri-o/cri-o && \
    git checkout proto/nri && \
    make && make install PREFIX=/out/ && \
    mkdir /out/etc && \
    cp -rv contrib/nri/etc/nri /out/etc

# build CRI-O enabled kind image AND replace the binaries with the NRI-enabled ones
FROM ${KIND_IMAGE}:v${KIND_VERSION}.${KIND_MINOR}

ARG CRIO_VERSION=1.21
ARG CRIO_OS=xUbuntu_21.04

RUN echo "Installing Packages ..." \
    && DEBIAN_FRONTEND=noninteractive clean-install \
    tcpdump vim gnupg tzdata 
RUN echo "Installing cri-o" \
    && export CONTAINERS_URL="https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/${CRIO_OS}/" \
    && echo "deb ${CONTAINERS_URL} /" > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list \
    && export CRIO_URL="http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/${CRIO_VERSION}/${CRIO_OS}/" \
    && echo "deb ${CRIO_URL} /" > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:${CRIO_VERSION}.list \
    && curl -L ${CONTAINERS_URL}Release.key | apt-key add - || true \
    && curl -L ${CRIO_URL}Release.key | apt-key add - || true \
    && apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get --option=Dpkg::Options::=--force-confdef install -y cri-o cri-o-runc \
    && ln -s /usr/libexec/podman/conmon /usr/local/bin/conmon \
    && printf "[crio.runtime]\ncgroup_manager=\"cgroupfs\"\nconmon_cgroup=\"pod\"\n" > /etc/crio/crio.conf \
    && sed -i 's/containerd/crio/g' /etc/crictl.yaml
RUN mkdir -p /opt/nri/bin
COPY --from=cri-o-dev /out/bin/cri* /usr/local/bin/
COPY --from=cri-o-dev /nri/* /opt/nri/bin/
RUN systemctl disable containerd && systemctl enable crio
